# C√≥digos Substitui√ß√µes antigas BI log√≠stica

***Descri√ß√£o do c√≥digo***

<aside>
üí°

</aside>

```r
let
    Source = YourDataSource,  // Replace "YourDataSource" with the name of your data source
    columnName = "statusPedido",  // Replace "statusPedido" with the name of the column you want to compare and change values

    // List of mappings: Original value -> New value
    mappings = [
        ["PENDING", "Novo"],
        ["novo", "Novo"],
        ["aprovado", "Aprovado"],
        ["entregue", "Entregue"],
        ["em viagem", "Em viagem"],
        ["CONCLUDED", "Entregue"],
        ["retornou", "Cancelado"],
        ["bloqueado", "Cancelado"],
        ["PAID_WAITING_SHIP", "Aprovado"],
        ["INVOICED", "Faturado"],
        ["PAID_WAITING_DELIVERY", "Em viagem"],
        ["CANCELED", "Cancelado"],
        ["cancelado", "Cancelado"],
        ["solicitado devolu√ß√£o", "Cancelado Retornando"],
        ["devolvido", "Cancelado"],
        ["faturando", "Aprovado"],
        ["retornando", "Cancelado retornando"],
        ["Coletando", "Faturado"],
        ["coletando", "Faturado"],
        ["devolvendo", "Cancelado Retornando"],
        ["desmembrado", "Cancelado"],
        ["Em aberto", "Novo"],
        ["Em andamento", "Aprovado"],
        ["Baixado", "Aprovado"],
        ["Atendido", "Faturado"],
        ["Liberado", "Faturado"],
        ["Expedido", "Em viagem"],
        ["N√£o aprovado", "Novo"]
    ],

    // Recursive function to replace values
    recursiveReplace = (table as table, rowIndex as number) as table =>
        let
            currentCellValue = table{rowIndex}[ColumnName],
            updatedCellValue = List.First(List.Select(mappings, each _{0} = currentCellValue))?[1],
            updatedTable = Table.ReplaceValue(table, currentCellValue, updatedCellValue, Replacer.ReplaceText, {columnName})
        in
            if rowIndex < Table.RowCount(table) then
                recursiveReplace(updatedTable, rowIndex + 1)
            else
                updatedTable,

    // Invoke recursive function
    finalTable = recursiveReplace(Source, 0),
    
    #"Tipo Alterado" = Table.TransformColumnTypes(finalTable, {{"dataPedido", type date}})
in
    #"Tipo Alterado"
```

```cpp
let
    Source = YourDataSource,  // Replace "YourDataSource" with the name of your data source
    columnName = "statusPedido",  // Replace "statusPedido" with the name of the column you want to compare and change values

    // List of mappings: Values to check -> New value
    mappings = [
        {{"PENDING", "novo"}, "Novo"},
        {{"aprovado", "PAID_WAITING_SHIP", "faturando", "Em andamento", "Baixado"}, "Aprovado"},
        {{"entregue", "CONCLUDED"}, "Entregue"},
        {{"em viagem", "PAID_WAITING_DELIVERY", "Expedido"}, "Em viagem"},
        {{"retornou", "bloqueado", "devolvido", "desmembrado", "CANCELED", "cancelado"}, "Cancelado"},
        {{"solicitado devolu√ß√£o", "devolvendo"}, "Cancelado Retornando"},
        {{"Coletando", "coletando"}, "Faturado"},
        {{"Em aberto", "N√£o aprovado"}, "Novo"},
        {{"Atendido", "Liberado"}, "Faturado"}
    ],

    // Recursive function to replace values
    recursiveReplace = (table as table, rowIndex as number) as table =>
        let
            currentCellValue = table{rowIndex}[ColumnName],
            updatedCellValue = List.First(List.Select(mappings, each List.Contains(_{0}, currentCellValue)))?[1],
            updatedTable = Table.ReplaceValue(table, currentCellValue, updatedCellValue, Replacer.ReplaceText, {columnName})
        in
            if rowIndex < Table.RowCount(table) then
                recursiveReplace(updatedTable, rowIndex + 1)
            else
                updatedTable,

    // Invoke recursive function
    finalTable = recursiveReplace(Source, 0),
    
    #"Tipo Alterado" = Table.TransformColumnTypes(finalTable, {{"dataPedido", type date}})
in
    #"Tipo Alterado"
```

```cpp
#"Valor Substitu√≠do" = Table.ReplaceValue(#"Personaliza√ß√£o Adicionada","PENDING","Novo",Replacer.ReplaceText,{"statusPedido"}),
#"Valor Substitu√≠do0" = Table.ReplaceValue(#"Colunas Removidas","PENDING","Novo",Replacer.ReplaceText,{"statusPedido"}),
#"Valor Substitu√≠do1" = Table.ReplaceValue(#"Valor Substitu√≠do","novo","Novo",Replacer.ReplaceText,{"statusPedido"}),
#"Valor Substitu√≠do2" = Table.ReplaceValue(#"Valor Substitu√≠do1","aprovado","Aprovado",Replacer.ReplaceText,{"statusPedido"}),
#"Valor Substitu√≠do3" = Table.ReplaceValue(#"Valor Substitu√≠do2","entregue","Entregue",Replacer.ReplaceText,{"statusPedido"}),
#"Valor Substitu√≠do4" = Table.ReplaceValue(#"Valor Substitu√≠do3","em viagem","Em viagem",Replacer.ReplaceText,{"statusPedido"}),
#"Valor Substitu√≠do5" = Table.ReplaceValue(#"Valor Substitu√≠do4","CONCLUDED","Entregue",Replacer.ReplaceText,{"statusPedido"}),
#"Valor Substitu√≠do6" = Table.ReplaceValue(#"Valor Substitu√≠do5","retornou","Cancelado",Replacer.ReplaceText,{"statusPedido"}),
#"Valor Substitu√≠do7" = Table.ReplaceValue(#"Valor Substitu√≠do6","bloqueado","Cancelado",Replacer.ReplaceText,{"statusPedido"}),
#"Valor Substitu√≠do8" = Table.ReplaceValue(#"Valor Substitu√≠do7","PAID_WAITING_SHIP","Aprovado",Replacer.ReplaceText,{"statusPedido"}),
#"Valor Substitu√≠do9" = Table.ReplaceValue(#"Valor Substitu√≠do8","INVOICED","Faturado",Replacer.ReplaceText,{"statusPedido"}),
#"Valor Substitu√≠do10" = Table.ReplaceValue(#"Valor Substitu√≠do9","PAID_WAITING_DELIVERY","Em viagem",Replacer.ReplaceText,{"statusPedido"}),
#"Valor Substitu√≠do11" = Table.ReplaceValue(#"Valor Substitu√≠do10","CANCELED","Cancelado",Replacer.ReplaceText,{"statusPedido"}),
#"Valor Substitu√≠do12" = Table.ReplaceValue(#"Valor Substitu√≠do11","cancelado","Cancelado",Replacer.ReplaceText,{"statusPedido"}),
#"Valor Substitu√≠do13" = Table.ReplaceValue(#"Valor Substitu√≠do12","solicitado devolu√ß√£o","Cancelado Retornando",Replacer.ReplaceText,{"statusPedido"}),
#"Valor Substitu√≠do14" = Table.ReplaceValue(#"Valor Substitu√≠do13","devolvido","Cancelado",Replacer.ReplaceText,{"statusPedido"}),
#"Valor Substitu√≠do15" = Table.ReplaceValue(#"Valor Substitu√≠do14","faturando","Aprovado",Replacer.ReplaceText,{"statusPedido"}),
#"Valor Substitu√≠do16" = Table.ReplaceValue(#"Valor Substitu√≠do15","retornando","Cancelado retornando",Replacer.ReplaceText,{"statusPedido"}),
#"Valor Substitu√≠do17" = Table.ReplaceValue(#"Valor Substitu√≠do16","Coletando","Faturado",Replacer.ReplaceText,{"statusPedido"}),
#"Valor Substitu√≠do18" = Table.ReplaceValue(#"Valor Substitu√≠do17","coletando","Faturado",Replacer.ReplaceText,{"statusPedido"}),
#"Valor Substitu√≠do19" = Table.ReplaceValue(#"Valor Substitu√≠do18","devolvendo","Cancelado Retornando",Replacer.ReplaceText,{"statusPedido"}),
#"Valor Substitu√≠do20" = Table.ReplaceValue(#"Valor Substitu√≠do19","desmembrado","Cancelado",Replacer.ReplaceText,{"statusPedido"}),
#"Valor Substitu√≠do21" = Table.ReplaceValue(#"Valor Substitu√≠do20","Em aberto","Novo",Replacer.ReplaceText,{"statusPedido"}),
#"Valor Substitu√≠do22" = Table.ReplaceValue(#"Valor Substitu√≠do21","Em andamento","Aprovado",Replacer.ReplaceText,{"statusPedido"}),
#"Valor Substitu√≠do23" = Table.ReplaceValue(#"Valor Substitu√≠do22","Baixado","Aprovado",Replacer.ReplaceText,{"statusPedido"}),
#"Valor Substitu√≠do24" = Table.ReplaceValue(#"Valor Substitu√≠do23","Atendido","Faturado",Replacer.ReplaceText,{"statusPedido"}),
#"Valor Substitu√≠do25" = Table.ReplaceValue(#"Valor Substitu√≠do24","Liberado","Faturado",Replacer.ReplaceText,{"statusPedido"}),
#"Valor Substitu√≠do26" = Table.ReplaceValue(#"Valor Substitu√≠do25","Expedido","Em viagem",Replacer.ReplaceText,{"statusPedido"}),
#"Valor Substitu√≠do27" = Table.ReplaceValue(#"Valor Substitu√≠do26","N√£o aprovado","Novo",Replacer.ReplaceText,{"statusPedido"}),
    #"Tipo Alterado" = Table.TransformColumnTypes(#"Valor Substitu√≠do27",{{"dataPedido", type date}}),
```

| Substitui√ß√£o | Value | Change by  |
| --- | --- | --- |
| #"Valor Substitu√≠do" | "PENDING" | "Novo" |
| #"Valor Substitu√≠do0" | "PENDING" | "Novo" |
| #"Valor Substitu√≠do1" | "novo" | "Novo"  |
| #"Valor Substitu√≠do2" | "aprovado" | "Aprovado" |
| #"Valor Substitu√≠do3" | "entregue" | "Entregue" |
| #"Valor Substitu√≠do4" | "em viagem" | "Em viagem" |
| #"Valor Substitu√≠do5" | "CONCLUDED" | "Entregue" |
| #"Valor Substitu√≠do6" | "retornou" | "Cancelado" |
| #"Valor Substitu√≠do7" | "bloqueado" | "Cancelado" |
| #"Valor Substitu√≠do8" | "PAID_WAITING_SHIP" | "Aprovado" |
| #"Valor Substitu√≠do9" | "INVOICED" | "Faturado" |
| #"Valor Substitu√≠do10" | "PAID_WAITING_DELIVERY" | "Em viagem" |
| #"Valor Substitu√≠do11" | "CANCELED" | "Cancelado" |
| #"Valor Substitu√≠do12" | "cancelado" | "Cancelado" |
| #"Valor Substitu√≠do13" | "solicitado devolu√ß√£o" | "Cancelado Retornando" |
| #"Valor Substitu√≠do14" | "devolvido" | "Cancelado" |
| #"Valor Substitu√≠do15" | "faturando" | "Aprovado" |
| #"Valor Substitu√≠do16" | "retornando" | "Cancelado retornando" |
| #"Valor Substitu√≠do17" | "Coletando" | "Faturado" |
| #"Valor Substitu√≠do18" | "coletando" | "Faturado" |
| #"Valor Substitu√≠do19" | "devolvendo" | "Cancelado Retornando" |
| #"Valor Substitu√≠do20" | "desmembrado" | "Cancelado" |
| #"Valor Substitu√≠do21" | "Em aberto" | "Novo" |
| #"Valor Substitu√≠do22" | "Em andamento" | "Aprovado" |
| #"Valor Substitu√≠do23" | "Baixado" | "Aprovado" |
| #"Valor Substitu√≠do24" | "Atendido" | "Faturado" |

let
    Source = YourDataSource,  // Replace "YourDataSource" with the name of your data source
    columnName = "statusPedido",  // Replace "statusPedido" with the name of the column you want to compare and change values

    // List of mappings: Values to check -> New value
    mappings = [
        {{"PENDING", "novo"}, "Novo"},
        {{"aprovado", "PAID_WAITING_SHIP", "faturando", "Em andamento", "Baixado"}, "Aprovado"},
        {{"entregue", "CONCLUDED"}, "Entregue"},
        {{"em viagem", "PAID_WAITING_DELIVERY", "Expedido"}, "Em viagem"},
        {{"retornou", "bloqueado", "devolvido", "desmembrado", "CANCELED", "cancelado"}, "Cancelado"},
        {{"solicitado devolu√ß√£o", "devolvendo"}, "Cancelado Retornando"},
        {{"Coletando", "coletando"}, "Faturado"},
        {{"Em aberto", "N√£o aprovado"}, "Novo"},
        {{"Atendido", "Liberado"}, "Faturado"}
    ],

    // Recursive function to replace values
    recursiveReplace = (table as table, rowIndex as number) as table =>
        let
            currentCellValue = table{rowIndex}[ColumnName],
            updatedCellValue = List.First(List.Select(mappings, each List.Contains(_{0}, currentCellValue)))?[1],
            updatedTable = Table.ReplaceValue(table, currentCellValue, updatedCellValue, Replacer.ReplaceText, {columnName})
        in
            if rowIndex < Table.RowCount(table) then
                recursiveReplace(updatedTable, rowIndex + 1)
            else
                updatedTable,

    // Invoke recursive function
    finalTable = recursiveReplace(Source, 0),
    
    #"Tipo Alterado" = Table.TransformColumnTypes(finalTable, {{"dataPedido", type date}})
in
    #"Tipo Alterado"

#"Valor Substitu√≠do" = Table.ReplaceValue(#"Personaliza√ß√£o Adicionada","PENDING","Novo",Replacer.ReplaceText,{"statusPedido"}),
#"Valor Substitu√≠do0" = Table.ReplaceValue(#"Colunas Removidas","PENDING","Novo",Replacer.ReplaceText,{"statusPedido"}),
#"Valor Substitu√≠do1" = Table.ReplaceValue(#"Valor Substitu√≠do","novo","Novo",Replacer.ReplaceText,{"statusPedido"}),
#"Valor Substitu√≠do2" = Table.ReplaceValue(#"Valor Substitu√≠do1","aprovado","Aprovado",Replacer.ReplaceText,{"statusPedido"}),
#"Valor Substitu√≠do3" = Table.ReplaceValue(#"Valor Substitu√≠do2","entregue","Entregue",Replacer.ReplaceText,{"statusPedido"}),
#"Valor Substitu√≠do4" = Table.ReplaceValue(#"Valor Substitu√≠do3","em viagem","Em viagem",Replacer.ReplaceText,{"statusPedido"}),
#"Valor Substitu√≠do5" = Table.ReplaceValue(#"Valor Substitu√≠do4","CONCLUDED","Entregue",Replacer.ReplaceText,{"statusPedido"}),
#"Valor Substitu√≠do6" = Table.ReplaceValue(#"Valor Substitu√≠do5","retornou","Cancelado",Replacer.ReplaceText,{"statusPedido"}),
#"Valor Substitu√≠do7" = Table.ReplaceValue(#"Valor Substitu√≠do6","bloqueado","Cancelado",Replacer.ReplaceText,{"statusPedido"}),
#"Valor Substitu√≠do8" = Table.ReplaceValue(#"Valor Substitu√≠do7","PAID_WAITING_SHIP","Aprovado",Replacer.ReplaceText,{"statusPedido"}),
#"Valor Substitu√≠do9" = Table.ReplaceValue(#"Valor Substitu√≠do8","INVOICED","Faturado",Replacer.ReplaceText,{"statusPedido"}),
#"Valor Substitu√≠do10" = Table.ReplaceValue(#"Valor Substitu√≠do9","PAID_WAITING_DELIVERY","Em viagem",Replacer.ReplaceText,{"statusPedido"}),
#"Valor Substitu√≠do11" = Table.ReplaceValue(#"Valor Substitu√≠do10","CANCELED","Cancelado",Replacer.ReplaceText,{"statusPedido"}),
#"Valor Substitu√≠do12" = Table.ReplaceValue(#"Valor Substitu√≠do11","cancelado","Cancelado",Replacer.ReplaceText,{"statusPedido"}),
#"Valor Substitu√≠do13" = Table.ReplaceValue(#"Valor Substitu√≠do12","solicitado devolu√ß√£o","Cancelado Retornando",Replacer.ReplaceText,{"statusPedido"}),
#"Valor Substitu√≠do14" = Table.ReplaceValue(#"Valor Substitu√≠do13","devolvido","Cancelado",Replacer.ReplaceText,{"statusPedido"}),
#"Valor Substitu√≠do15" = Table.ReplaceValue(#"Valor Substitu√≠do14","faturando","Aprovado",Replacer.ReplaceText,{"statusPedido"}),
#"Valor Substitu√≠do16" = Table.ReplaceValue(#"Valor Substitu√≠do15","retornando","Cancelado retornando",Replacer.ReplaceText,{"statusPedido"}),
#"Valor Substitu√≠do17" = Table.ReplaceValue(#"Valor Substitu√≠do16","Coletando","Faturado",Replacer.ReplaceText,{"statusPedido"}),
#"Valor Substitu√≠do18" = Table.ReplaceValue(#"Valor Substitu√≠do17","coletando","Faturado",Replacer.ReplaceText,{"statusPedido"}),
#"Valor Substitu√≠do19" = Table.ReplaceValue(#"Valor Substitu√≠do18","devolvendo","Cancelado Retornando",Replacer.ReplaceText,{"statusPedido"}),
#"Valor Substitu√≠do20" = Table.ReplaceValue(#"Valor Substitu√≠do19","desmembrado","Cancelado",Replacer.ReplaceText,{"statusPedido"}),
#"Valor Substitu√≠do21" = Table.ReplaceValue(#"Valor Substitu√≠do20","Em aberto","Novo",Replacer.ReplaceText,{"statusPedido"}),
#"Valor Substitu√≠do22" = Table.ReplaceValue(#"Valor Substitu√≠do21","Em andamento","Aprovado",Replacer.ReplaceText,{"statusPedido"}),
#"Valor Substitu√≠do23" = Table.ReplaceValue(#"Valor Substitu√≠do22","Baixado","Aprovado",Replacer.ReplaceText,{"statusPedido"}),
#"Valor Substitu√≠do24" = Table.ReplaceValue(#"Valor Substitu√≠do23","Atendido","Faturado",Replacer.ReplaceText,{"statusPedido"}),
#"Valor Substitu√≠do25" = Table.ReplaceValue(#"Valor Substitu√≠do24","Liberado","Faturado",Replacer.ReplaceText,{"statusPedido"}),
#"Valor Substitu√≠do26" = Table.ReplaceValue(#"Valor Substitu√≠do25","Expedido","Em viagem",Replacer.ReplaceText,{"statusPedido"}),
#"Valor Substitu√≠do27" = Table.ReplaceValue(#"Valor Substitu√≠do26","N√£o aprovado","Novo",Replacer.ReplaceText,{"statusPedido"}),
    #"Tipo Alterado" = Table.TransformColumnTypes(#"Valor Substitu√≠do27",{{"dataPedido", type date}}),
